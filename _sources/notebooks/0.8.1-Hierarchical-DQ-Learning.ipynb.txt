{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 0.8.1 Hierarchical DQ Learning\n",
    "\n",
    "Quickly put together a reinforcement learning how DQNs perform when run on tasks with a hierarchical structure such as the one laid out in [this](http://ski.clps.brown.edu/papers/CollinsFrank_Cognition.pdf) paper."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "## Boilerplate\n",
    "\n",
    "The following subsections are largely boilerplate code, so skip around as needed."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Jupyter Extensions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load [watermark](https://github.com/rasbt/watermark) to see the state of the machine and environment that's running the notebook. To make sense of the options, take a look at the [usage](https://github.com/rasbt/watermark#usage) section of the readme."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The watermark extension is already loaded. To reload it, use:\n",
      "  %reload_ext watermark\n",
      "Thu Jun 13 2019 00:56:49 \n",
      "\n",
      "CPython 3.6.8\n",
      "IPython 7.3.0\n",
      "\n",
      "numpy 1.16.2\n",
      "matplotlib 3.0.2\n",
      "seaborn 0.9.0\n",
      "tensorflow 1.10.0\n",
      "\n",
      "compiler   : GCC 7.3.0\n",
      "system     : Linux\n",
      "release    : 4.18.0-21-generic\n",
      "machine    : x86_64\n",
      "processor  : x86_64\n",
      "CPU cores  : 8\n",
      "interpreter: 64bit\n",
      "Git hash   : 9b138876ec01744f4f4b303641c4f9be4079437e\n",
      "Git branch : master\n"
     ]
    }
   ],
   "source": [
    "# Load `watermark` extension\n",
    "%load_ext watermark\n",
    "# Display the status of the machine and packages. Add more as necessary.\n",
    "%watermark -v -n -m -g -b -t -p numpy,matplotlib,seaborn,tensorflow"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load [autoreload](https://ipython.org/ipython-doc/3/config/extensions/autoreload.html) which will always reload modules marked with `%aimport`.\n",
    "\n",
    "This behavior can be inverted by running `autoreload 2` which will set everything to be auto-reloaded *except* for modules marked with `%aimport`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load `autoreload` extension\n",
    "%load_ext autoreload\n",
    "# Set autoreload behavior\n",
    "%autoreload 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load `matplotlib` in one of the more `jupyter`-friendly [rich-output modes](https://ipython.readthedocs.io/en/stable/interactive/plotting.html). Some options (that may or may not have worked) are `inline`, `notebook`, and `gtk`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set the matplotlib mode.\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Imports"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Static imports that shouldn't necessarily change throughout the notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Standard library imports\n",
    "import logging\n",
    "import os\n",
    "from pathlib import Path\n",
    "from copy import deepcopy\n",
    "from pprint import pprint\n",
    "\n",
    "# Third party\n",
    "import IPython as ipy\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import tensorflow as tf\n",
    "from pstar import pdict"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Local imports that may or may not be autoreloaded. This section contains things that will likely have to be re-imported multiple times, and have additions or subtractions made throughout the project."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Utility functions\n",
    "%aimport leabratf.utils\n",
    "from leabratf.utils import setup_logging\n",
    "%aimport leabratf.constants\n",
    "from leabratf.constants import DIR_DATA_PROC"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Initial Setup"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Set [seaborn defaults](https://seaborn.pydata.org/generated/seaborn.set.html) for matplotlib."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "sns.set()\n",
    "sns.set_context(\"notebook\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Set up the logger configuration to something more useful than baseline. Creates log files for the different log levels in the `logs` directory.\n",
    "\n",
    "See `logging.yml` for the exact logging configuration."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run base logger setup\n",
    "setup_logging()\n",
    "# Define a logger object\n",
    "logger = logging.getLogger('leabratf')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "## Task Definitions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Constants"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "N_COLORS = 5\n",
    "N_SHAPES = 4\n",
    "N_ACTIONS = 4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Phase Colors and Shapes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# All the colors and shapes\n",
    "all_colors = [0, 1, 2, 3, 4]\n",
    "all_shapes = [1 ,2, 3, 4]\n",
    "\n",
    "# Phase A\n",
    "phase_a_colors = [0, 1, 2]\n",
    "phase_a_shapes = [1, 2]\n",
    "\n",
    "# Phase B\n",
    "phase_b_colors = [0, 1, 2]\n",
    "phase_b_shapes = [3, 4]\n",
    "\n",
    "# Phase C\n",
    "phase_c_colors = [3, 4]\n",
    "phase_c_shapes = [3, 4]\n",
    "\n",
    "# Phase Pairs\n",
    "phase_color_shape_pairs = {\n",
    "    'Phase A' : (phase_a_colors, phase_a_shapes),\n",
    "    'Phase B' : (phase_b_colors, phase_b_shapes),\n",
    "    'Phase C' : (phase_c_colors, phase_c_shapes),\n",
    "}\n",
    "\n",
    "# Color lines correspond to a particular horizontal line\n",
    "# # colors are not uniformly selected for\n",
    "# Shapes corespond to a particular vertical line\n",
    "# Color, Shape combinations correspond to a particular action 1-4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task-Sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the constants\n",
    "# TS Colors\n",
    "ts1_colors = [0, 1]\n",
    "ts2_colors = [2]\n",
    "ts_old_colors = [3]\n",
    "ts_new_colors = [4]\n",
    "\n",
    "ts_color_shape_pairs = {\n",
    "    'TS 1 Phase A' : (ts1_colors, phase_a_shapes),\n",
    "    'TS 2 Phase A' : (ts2_colors, phase_a_shapes),\n",
    "    'TS 1 Phase B' : (ts1_colors, phase_b_shapes),\n",
    "    'TS 2 Phase B' : (ts2_colors, phase_b_shapes),\n",
    "    'TS Old Phase C' : (ts_old_colors, phase_c_shapes),\n",
    "    'TS New Phase C' : (ts_new_colors, phase_c_shapes),\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Action Mapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "action_dictonary_ts1 = {\n",
    "    # (Color, Shape) : Action\n",
    "    #      Phase A       |       Phase B\n",
    "    (0,1) : 1, (0,2) : 2, (0,3) : 1, (0,4) : 3, # TS 1\n",
    "    (1,1) : 1, (1,2) : 2, (1,3) : 1, (1,4) : 3, # TS 1\n",
    "    (2,1) : 3, (2,2) : 4, (2,3) : 4, (2,4) : 2, # TS 2\n",
    "    #                    |       Phase C\n",
    "                          (3,3) : 1, (3,4) : 3, # TS Old\n",
    "                          (4,3) : 1, (4,4) : 2} # TS New"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "action_dictonary_ts2 = {\n",
    "    # (Color, Shape) : Action\n",
    "    #      Phase A       |       Phase B\n",
    "    (0,1) : 1, (0,2) : 2, (0,3) : 1, (0,4) : 3, # TS 1\n",
    "    (1,1) : 1, (1,2) : 2, (1,3) : 1, (1,4) : 3, # TS 1\n",
    "    (2,1) : 3, (2,2) : 4, (2,3) : 4, (2,4) : 2, # TS 2\n",
    "    #                    |       Phase C\n",
    "                          (3,3) : 4, (3,4) : 2, # TS Old\n",
    "                          (4,3) : 1, (4,4) : 2} # TS New"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "## Data Generation Functions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Phase Label Generation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def explicit_phase_labels(phase_colors,\n",
    "                          phase_shapes,\n",
    "                          n_colors=N_COLORS,\n",
    "                          n_shapes=N_SHAPES,\n",
    "                         ):\n",
    "    # Meshgrid across the colors and shapes\n",
    "    choices = np.array(np.meshgrid(phase_colors, phase_shapes)).T.reshape(-1,2)\n",
    "    # Turn them into one hot vectors\n",
    "    color_choices = np.eye(n_colors)[choices[:,0]]\n",
    "    shape_choices = np.eye(n_shapes)[choices[:,1] - 1]\n",
    "    # Reshape to the desired shape\n",
    "    color_choices = color_choices.reshape((len(color_choices), n_colors, 1))\n",
    "    shape_choices = shape_choices.reshape((len(shape_choices), n_shapes, 1))\n",
    "    \n",
    "    return color_choices, shape_choices"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Action Selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def actions(color_choices, shape_choices, action_dict=action_dictonary_ts1, \n",
    "            n_actions=N_ACTIONS):\n",
    "    \"\"\"Implements the mapping from shapes and colors to actions\"\"\"\n",
    "    # Make binary from one hot and increment shape by 1\n",
    "    color_binarized = integer_labels(color_choices)\n",
    "    shape_binarized = [i+1 for i in integer_labels(shape_choices)]\n",
    "    # Compile into a list of tuples\n",
    "    label_tuples = [(color, shape) for color, shape in zip(\n",
    "        color_binarized, shape_binarized)]\n",
    "    # Substitute based on the action dictionary\n",
    "    integer_actions = [action_dict[key] for key in label_tuples]\n",
    "    return np.eye(n_actions)[np.array(integer_actions)-1]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Helper Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def integer_labels(labels):\n",
    "    \"\"\"Turns one-hot labels to integers\"\"\"\n",
    "    return [np.where(r==1)[0][0] for r in labels]\n",
    "    \n",
    "def input_array(color_choices, shape_choices, \n",
    "                n_shapes=N_SHAPES, n_colors=N_COLORS):\n",
    "    \"\"\"Turns one-hot labels to 2D input arrays with lines\"\"\"\n",
    "    # Full Color array\n",
    "    color_array = np.tile(color_choices, n_shapes)\n",
    "    # Full Shape Array\n",
    "    shape_array = np.transpose(\n",
    "        np.tile(shape_choices, n_colors),\n",
    "        [0, 2, 1])\n",
    "        \n",
    "    # Full data with both\n",
    "    x_data = np.maximum(color_array, shape_array)\n",
    "    return x_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": false
   },
   "source": [
    "## Making the Datasets"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "### Generating the Phase Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "phase_datasets = {}\n",
    "for phase, phase_pair in phase_color_shape_pairs.items():\n",
    "    choices = explicit_phase_labels(*phase_pair)\n",
    "    inputs = input_array(*choices)\n",
    "    labels = actions(*choices)\n",
    "    phase_datasets[phase] = (inputs, labels)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generating the Task-Set Datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "ts_datasets = {}\n",
    "for ts, ts_pair in ts_color_shape_pairs.items():\n",
    "    choices = explicit_phase_labels(*ts_pair)\n",
    "    inputs = input_array(*choices)\n",
    "    labels = actions(*choices)\n",
    "    ts_datasets[ts] = (inputs, labels)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Tensorflow Datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_tf_ts_datasets(datasets, init_ops=None):\n",
    "    # The first step of the setup is that each of the datasets (training, validation, and \n",
    "    # testing) are turned into their own `Dataset` objects.\n",
    "    tf_datasets = pdict()\n",
    "    for data, name in zip(datasets, ['train', 'ts']):\n",
    "        for key in data.keys():\n",
    "            tf_datasets[key] = tf.data.Dataset.from_tensor_slices(\n",
    "                data[key]).repeat().shuffle(len(data[key][0])).batch(\n",
    "                1 if name=='train' else len(data[key][0]))\n",
    "    \n",
    "    # Next, let's define the iterators for each of the datasets, and then add their \n",
    "    # initializations to the `init_ops` list.\n",
    "    # Training iterator\n",
    "    iterators = pdict({name : data.make_initializable_iterator()\n",
    "                      for name, data in tf_datasets.items()})\n",
    "\n",
    "    # Add the initiatlizations to the init opts\n",
    "    init_ops = init_ops or []\n",
    "    init_ops += [iter.initializer for iter in iterators.values()]\n",
    "    \n",
    "    first_dataset = list(tf_datasets.values())[0] \n",
    "    output_types, output_shapes = first_dataset.output_types, first_dataset.output_shapes\n",
    "    \n",
    "    # And finally, the interesting part. Rather than creating separate next elements for \n",
    "    # the model, the `tf.data` API has a string handler iterator so we can contextually \n",
    "    # switch the active `Dataset` object, resulting in different values being used for `x` \n",
    "    # and `y`.\n",
    "\n",
    "    # The way this is done is by defining a `tf.placeholder` variable, which is used \n",
    "    # first to create a string handler iterator, and later to hold the dataset-indicating \n",
    "    # string handle. The string handler iterator is what then changes the values of `x` and \n",
    "    # `y`, naturally also supplying them using the `get_next` method.\n",
    "    # The placeholder variable of type string\n",
    "    handle = tf.placeholder(tf.string, shape=[])\n",
    "    \n",
    "    # Iterator from string handle\n",
    "    handle_iterator = tf.data.Iterator.from_string_handle(\n",
    "        handle, output_types, output_shapes)\n",
    "\n",
    "    # x and y that will be used in the graph\n",
    "    x, y = handle_iterator.get_next()\n",
    "    \n",
    "    return x, y, iterators, handle, init_ops"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Recreating Old Plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "N_INPUTS = N_COLORS * N_SHAPES\n",
    "N_HIDDEN_1 = 100 \n",
    "N_OUTPUTS = 4\n",
    "TF_DEVICE = '/device:CPU:0'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Oreilly Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "def oreilly_model(inputs):\n",
    "    # Reshape for hidden layer\n",
    "    inputs = tf.reshape(inputs, shape=[-1, N_INPUTS])\n",
    "    # Single hidden layer\n",
    "    inputs = tf.sigmoid(tf.add(tf.matmul(inputs, weights['h1']), biases['b1']))\n",
    "    # Output layer\n",
    "    inputs = tf.add(tf.matmul(inputs, weights['out']), biases['out'])\n",
    "    # Reshape for labels\n",
    "    return tf.reshape(inputs, shape=[-1, N_OUTPUTS])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Main Graph Definitions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Cleanup any residual nodes\n",
    "tf.reset_default_graph()\n",
    "init_ops = []\n",
    "\n",
    "# Weights and biases\n",
    "weights = pdict({\n",
    "    'h1': tf.get_variable(\n",
    "        name='w_h1', \n",
    "        shape=[N_INPUTS, N_HIDDEN_1],\n",
    "        initializer=tf.contrib.layers.xavier_initializer(),\n",
    "        dtype=tf.float64),\n",
    "    'out': tf.get_variable(\n",
    "        name='w_out', \n",
    "        shape=[N_HIDDEN_1, N_OUTPUTS],\n",
    "        initializer=tf.contrib.layers.xavier_initializer(),\n",
    "        dtype=tf.float64),\n",
    "})\n",
    "biases = pdict({\n",
    "    'b1': tf.get_variable(\n",
    "        name=\"b_1\", \n",
    "        shape=[N_HIDDEN_1], \n",
    "        initializer=tf.zeros_initializer(),\n",
    "        dtype=tf.float64),\n",
    "    'out': tf.get_variable(\n",
    "        name=\"b_out\", \n",
    "        shape=[N_OUTPUTS], \n",
    "        initializer=tf.zeros_initializer(),\n",
    "        dtype=tf.float64),\n",
    "})\n",
    "\n",
    "with tf.device(TF_DEVICE):\n",
    "    # Get the relevant dataset nodes\n",
    "    x, y, iterators, handler, init_ops = make_tf_ts_datasets(\n",
    "        (phase_datasets, ts_datasets), init_ops)\n",
    "\n",
    "    # Build the model\n",
    "    logits = oreilly_model(x)\n",
    "    # Ensure y is cast to the same type as logits\n",
    "    labels = tf.cast(y, logits.dtype)\n",
    "    \n",
    "    # We will keep this in for now\n",
    "    # Define alpha as placeholder variable\n",
    "    alpha_ph = tf.placeholder(tf.float32, shape=[])\n",
    "\n",
    "    # Define loss and optimizer\n",
    "    loss_op = tf.reduce_mean(tf.losses.softmax_cross_entropy(\n",
    "        labels, logits))\n",
    "\n",
    "    # Define some intermediate nodes\n",
    "    predictions = tf.nn.softmax(logits)\n",
    "    rounded_predictions = tf.round(predictions)\n",
    "    equal_labels_and_preds = tf.equal(rounded_predictions, labels)\n",
    "    \n",
    "    # Accuracy \n",
    "    sample_acc = tf.reduce_all(equal_labels_and_preds, axis=1)\n",
    "    accuracy = tf.reduce_mean(tf.cast(sample_acc, tf.float64))\n",
    " \n",
    "    # Adam\n",
    "    train_op_adam = tf.train.AdamOptimizer(alpha_ph).minimize(loss_op)\n",
    "    # Adadelta \n",
    "    train_op_adadelta = tf.train.AdadeltaOptimizer(alpha_ph).minimize(loss_op)\n",
    "    # RMSProp\n",
    "    train_op_rmsprop = tf.train.RMSPropOptimizer(alpha_ph).minimize(loss_op)\n",
    "    # SGD\n",
    "    train_op_sgd = tf.train.GradientDescentOptimizer(alpha_ph).minimize(loss_op)\n",
    "    \n",
    "# And now add these to a dictionary\n",
    "optimizer_dict = pdict({\n",
    "    'Adam' : train_op_adam,\n",
    "    'Adadelta' : train_op_adadelta,\n",
    "    'RMSProp' : train_op_rmsprop,\n",
    "    'sgd' : train_op_sgd,\n",
    "})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### TF Helper Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "def new_session(*args, **kwargs):\n",
    "    # Try to close the globally defined session if it isn't already\n",
    "    try:\n",
    "        if not sess._closed:\n",
    "            sess.close()\n",
    "    # If it doesn't exist, then just pass\n",
    "    except NameError:\n",
    "        pass\n",
    "    # Return the new instance\n",
    "    return tf.Session(*args, **kwargs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Based on code from \n",
    "# https://codereview.stackexchange.com/questions/169870/decorator-to-measure-execution-time-of-a-function\n",
    "from functools import wraps\n",
    "from time import time\n",
    "import datetime\n",
    "\n",
    "def timing(func):\n",
    "    @wraps(func)\n",
    "    def wrapper(*args, **kwargs):\n",
    "        start = time()\n",
    "        result = func(*args, **kwargs)\n",
    "        end = time()\n",
    "        logger.info('Elapsed time: {}'.format(\n",
    "            datetime.timedelta(seconds=end-start)))\n",
    "        return result\n",
    "    return wrapper"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Training Function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "@timing\n",
    "def train_exp(\n",
    "    sess, \n",
    "    lr=0.0033, \n",
    "    epochs=100,\n",
    "    train_op=optimizer_dict['Adam'], \n",
    "    init_ops=None,\n",
    "    verbose=False,\n",
    "    phases=['a'],\n",
    "    n_train=None,\n",
    "    n_val=5,\n",
    "):\n",
    "    log_level = logger.info if verbose else logger.debug\n",
    "    log_level(f'Beginning training using learning rate {lr}, {train_op.name} '\n",
    "              f'training routine, for {epochs} epochs')\n",
    "    # Ensure this is an int\n",
    "    epochs = int(epochs)\n",
    "    # Dict with the various metrics we care about while training\n",
    "    phase_metrics = pdict()\n",
    "    \n",
    "    # Run the initialization ops\n",
    "    init_ops = init_ops or []\n",
    "    if tf.global_variables_initializer() not in init_ops:\n",
    "        init_ops += [tf.global_variables_initializer(), \n",
    "                     tf.local_variables_initializer()]\n",
    "    sess.run(init_ops)\n",
    "    \n",
    "    # Define training and validation handlers\n",
    "    handles = pdict({name : sess.run(iterators[name].string_handle())\n",
    "                    for name in iterators.keys()})\n",
    "    \n",
    "    for i, phase in enumerate(phases):\n",
    "        n_train = len(phase_datasets[phase][0])\n",
    "        epoch_metrics = pdict(\n",
    "            {key : pdict({'loss':[], 'accuracy':[]})\n",
    "             for key in ts_datasets.keys()})\n",
    "        epoch_metrics['encounter'] = []\n",
    "        training_metrics = pdict(\n",
    "            {key : pdict({'loss':[], 'accuracy':[]})\n",
    "             for key in ts_datasets.keys()})\n",
    "        \n",
    "        for epoch in range(epochs):\n",
    "            for _ in range(n_train):\n",
    "                # Training op and compute metrics\n",
    "                _ = sess.run(\n",
    "                    train_op, \n",
    "                    feed_dict={alpha_ph: lr, handler: handles[phase]})\n",
    "                \n",
    "                for met_key in ts_datasets.keys():\n",
    "                    metrics = sess.run(\n",
    "                        [loss_op, accuracy],\n",
    "                        feed_dict={handler: handles[met_key]})\n",
    "                    # Record\n",
    "                    for key, metric in zip(['loss', 'accuracy'], metrics):\n",
    "                        training_metrics[met_key][key].append(metric)\n",
    "\n",
    "            if not epoch % n_val or epoch == epochs - 1:\n",
    "                for ts_key in ts_datasets.keys():\n",
    "                    for metric, values in training_metrics[ts_key].items():\n",
    "                        epoch_metrics[ts_key][metric].append(np.mean(values))\n",
    "                epoch_metrics['encounter'].append(epoch + i*epochs)\n",
    "                log_level(f'Completed Epoch {epoch} for {phase}')\n",
    "                training_metrics = pdict(\n",
    "                    {key : pdict({'loss':[], 'accuracy':[]})\n",
    "                     for key in ts_datasets.keys()})\n",
    "        \n",
    "        phase_metrics[phase] = epoch_metrics\n",
    "        log_level(f'Completed {phase}')\n",
    "\n",
    "    return phase_metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Running the Experiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%time\n",
    "N_MODELS = 100\n",
    "sess = new_session()\n",
    "all_ts_phase_metrics = [train_exp(\n",
    "    sess, \n",
    "    phases=phase_datasets.keys(),\n",
    "    lr=0.00333, \n",
    "    epochs=25,\n",
    "    train_op=optimizer_dict['Adam'], \n",
    "    init_ops=init_ops,\n",
    "    verbose=False,\n",
    "    n_train=None,\n",
    "    n_val=1,\n",
    ") for _ in range(N_MODELS)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "### Plotting TS1 for TS Old Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Plotting Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_multiple_models(all_ts_phase_metrics, dataset_to_plot, title=None):\n",
    "    model_average = True\n",
    "    \n",
    "    # Empty lists for the long form data\n",
    "    long_epochs, long_metrics, long_hues, long_units = [], [], [], []\n",
    "\n",
    "    # Loop through each model's data\n",
    "    for i, model_metrics in enumerate(all_ts_phase_metrics):\n",
    "        # Plot the number of epochs according to the data with the shortest\n",
    "        # number of epochs.\n",
    "        # Add to the long form lists\n",
    "        samples = []\n",
    "        for phase, phase_metrics in model_metrics.items():\n",
    "            for dataname in dataset_to_plot:\n",
    "                n_epochs = len(phase_metrics['encounter'])\n",
    "                label = dataname\n",
    "                units = i\n",
    "                long_epochs += phase_metrics['encounter']\n",
    "                long_metrics += phase_metrics[dataname]['accuracy']\n",
    "                long_hues += [f'{dataname}']*n_epochs\n",
    "                long_units += [units]*n_epochs\n",
    "\n",
    "    if model_average:\n",
    "        sns.lineplot(x=long_epochs, y=long_metrics, hue=long_hues, \n",
    "                     estimator='mean')\n",
    "    # Plot each line individually\n",
    "    else:\n",
    "        sns.lineplot(x=long_epochs, y=long_metrics, hue=long_hues, \n",
    "                     estimator=None, units=long_units)\n",
    "\n",
    "    for vline in [n_epochs, n_epochs*2]:\n",
    "        plt.axvline(vline, linestyle='--')\n",
    "\n",
    "    if title:\n",
    "        plt.title(title)\n",
    "    plt.xlabel('Number of Phase Encounters')\n",
    "    plt.ylabel('Accuracy')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "#### Full Plots Using TS1 for TS Old"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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f+211xg1ahRjxozh7bffjtz/6aefcs011zBs2DDGjRvHCy+8EHnM7/ezYMECRo4cSX5+PjNmzKC8vBwILw704IMPMmbMGMaOHcuzzz7b5qTYZMCAAaxYsYIrr7ySSy+9lMWLF3PqnOC33nqLq666iry8PKZMmcLu3buB8Ht+0003kZ+fz9VXX83//d//RZ5z6mcNLa8mzrTPQ4cOsWjRosj73XSFFAgEWLp0KePHj+eyyy7jkUcewefzASebBpcvX87o0aN54IEHqKys5I477iA/P58RI0Ywa9YsdF1v1/sjdEyXL8kutHTxxRczYsQIXn31VebPn9/m5+/cuZOZM2eyZcsWnn/+ee69914mTJjAhg0b2Lp1K3PnzuXKK6/E4XAA8O6777J8+XKGDBnCU089xYIFC1ixYgVer5dbb72VefPm8fLLL7Nv3z5uvfVW+vXrR79+/YBwDaDly5fzP//zPwSDwRax3HffffTt25cvvviCw4cPc8stt9CzZ09mzpyJoiisXLmSFStW/OTfFAqFWLlyJXa7nZycHPbs2UN5eTl1dXV8/vnn/Otf/2LevHlcccUVJCYmYrPZWLp0Kf369WP//v3ceuut5ObmcsUVV7B69Wo8Hg+ffvopZrOZH374IVLi5f777yctLY2PPvqIhoYG7rjjDrKysvjNb37T5s8Bwkls1apVeDwerr32WiZMmMAvf/lL3n//fV544QWWLVvGJZdcQkFBAaqqEgwGufPOO5kxYwavvvoq3377LXfddRdvv/12q0tlnGmfixcvbvF+//Wvf+X48eOsWbMGVVVZsGABy5Yt47777gPC5WVqamr45JNP0HWdZcuWkZmZyZdffgnAjh07kCSpXe+N0DHiykM4rXnz5vHmm29SWVnZ5udmZ2czY8YMFEVhypQpuN1u5syZg9lsZsyYMZjNZgoKCiLbjx8/nksvvRSz2cz8+fP57rvvcLvdfPrpp/To0YMZM2agqiqDBg1i0qRJfPjhh5HnXn755QwfPhxZliPLozZxu918++23LFiwAIvFQm5uLjNnzmTt2rWt/lt27NhBfn4+o0ePZv369SxbtgyXywWAqqrMmTMHk8nEuHHjsNvtHDlyBICRI0cyYMAAZFlm4MCBXH311WzdujXyvOrqao4dO4aiKFx88cU4nU7Ky8v5/PPPefDBB7Hb7aSmpnLzzTezfv36M8b3wQcfkJ+fH/n5cd/U7bffTkJCAt27d2fkyJHs3bsXgFWrVvGHP/yBwYMHI0kSvXv3pkePHuzYsQOv18vs2bMxm82MGjWKCRMmnDWGHzvTPn/MMAxWrlzJgw8+SFJSEk6nkzvuuKPZvmRZZt68eZjNZqxWK6qqUlZWRlFRESaTifz8fJE8YkRceQin1b9/f8aPH8/y5cvp06dPm56bmpoaud10Rp2Wlha5z2KxUF9fH/m9W7dukdsOh4PExERKS0spLCxk586dzTqBNU1j2rRpkd/PVrK6tLSUxMREnE5n5L7u3buza9euVv8tQ4YMOeOVSVJSEqp68hCy2WyRgQY7duzg6aef5sCBAwSDQQKBAJMnTwZg+vTpFBcXc++991JbW8u0adOYP38+RUVFhEIhxowZE3lNXdfP+jdOnjyZp59++oyPp6enN4uv6X13u9306tWrxfalpaV069YNWT55Xtm9e3dKSkrOuI/W7vPHKisraWho4Nprr43cZxhGs2ao5OTkZicFt912Gy+++CK33norADfccAOzZ89udWxC9IjkIZzRvHnz+PWvfx05UIFI57LP54t8KZeVlXVoP8XFxZHb9fX11NTUkJGRQVZWFpdeeil///vf2/W6GRkZ1NTU4PF4IrE2rXx3rt13333ceOONvPLKK1gsFh5//HGqqqoAMJlM3H333dx9992cOHGC2bNnc8EFFzBu3DjMZjNfffVVs6R0LmRlZTW7+muSkZFBcXExuq5HEojb7SYnJwcIJ4OGhobI9k19Na3x4yuEprU21q9ff8bP5MfPcTqdLFy4kIULF3LgwAF+97vfcckllzBq1KhWxyFEh2i2Es6od+/eTJkyhTfeeCNyX0pKCpmZmaxduxZN01i1alWzDuT2+Oyzz/jmm28IBAI899xzDBkyhKysLMaPH8/Ro0dZs2YNwWCQYDDIzp07OXToUKteNysri7y8PJ555hn8fj979+5l1apVkQV4zqX6+noSExOxWCzs3Lkzsk4DwFdffcW+ffvQNA2n04mqqpFlR0ePHs2TTz6Jx+NB13UKCgoizV3RdN111/Haa6+xa9cuDMPg2LFjFBYWMnjwYGw2G6+88grBYJAtW7awceNGpkyZAkBubi4bNmygoaGBY8eOnXaI85mkpqZSUlJCIBAAwk1SM2fO5IknnqCiogIID3D44osvzvgan3zyCceOHcMwDJxOJ4qiNLtKEjqPeNeFs5ozZ06LZTyXLFnCq6++ysiRIzl48CB5eXkd2sfUqVNZtmwZI0eOZPfu3fz1r38FwmeZr776Ku+99x5jx45lzJgxPP3005Evn9Z45plnKCwsZOzYsdx9993MnTuX0aNHdyje1li0aBHPP/88eXl5LFu2jKuuuiryWHl5OfPmzWP48OFMmTKFESNGRJrinnrqKYLBIFOmTOHSSy9l3rx5Z72ye//995vN88jLy4t8EZ/NVVddxZ133sl9993HsGHDmDNnDjU1NZjNZv7rv/6Lzz//nF/84hcsXryYp556KtJ0+fvf/x6TycRll13G/fff36ZE/Itf/IK+ffsyZswYRo4cCcAf//hHevfuzfXXX8+wYcO4+eabI/1Gp3Ps2LHIyLwbbriB3/72t5HXEjqXWM9DEARBaDNx5SEIgiC0mUgegiAIQpuJ5CEIgiC0mUgegiAIQpuJ5CEIgiC0mUgegiAIQpuJ5CEIgiC0mUgegiAIQpuJ5CEIgiC02f8Pw+axce31mEgAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "datasets_to_plot = [['TS 1 Phase A', 'TS 2 Phase A'],\n",
    "                    ['TS 1 Phase B', 'TS 2 Phase B'],\n",
    "                    ['TS Old Phase C', 'TS New Phase C']]\n",
    "titles = ['TS 1 and 2 Phase A Full Training',\n",
    "          'TS 1 and 2 Phase B Full Training',\n",
    "          'TS1 for TS Old and TS New Phase C Full Training']\n",
    "for dataset, title in zip(datasets_to_plot, titles):\n",
    "    plot_multiple_models(all_ts_phase_metrics, dataset,\n",
    "                         title=title)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Rerunning TS2 for TS Old"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": true
   },
   "source": [
    "#### Redeclaring Relevant Stuff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "phase_datasets_ts2 = {}\n",
    "for phase, phase_pair in phase_color_shape_pairs.items():\n",
    "    choices = explicit_phase_labels(*phase_pair)\n",
    "    inputs = input_array(*choices)\n",
    "    labels = actions(*choices,\n",
    "                     action_dict=action_dictonary_ts2)\n",
    "    phase_datasets_ts2[phase] = (inputs, labels)\n",
    "    \n",
    "ts_datasets_ts2 = {}\n",
    "for ts, ts_pair in ts_color_shape_pairs.items():\n",
    "    choices = explicit_phase_labels(*ts_pair)\n",
    "    inputs = input_array(*choices)\n",
    "    labels = actions(*choices,\n",
    "                     action_dict=action_dictonary_ts2)\n",
    "    ts_datasets_ts2[ts] = (inputs, labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Cleanup any residual nodes\n",
    "tf.reset_default_graph()\n",
    "init_ops = []\n",
    "\n",
    "# Weights and biases\n",
    "weights = pdict({\n",
    "    'h1': tf.get_variable(\n",
    "        name='w_h1', \n",
    "        shape=[N_INPUTS, N_HIDDEN_1],\n",
    "        initializer=tf.contrib.layers.xavier_initializer(),\n",
    "        dtype=tf.float64),\n",
    "    'out': tf.get_variable(\n",
    "        name='w_out', \n",
    "        shape=[N_HIDDEN_1, N_OUTPUTS],\n",
    "        initializer=tf.contrib.layers.xavier_initializer(),\n",
    "        dtype=tf.float64),\n",
    "})\n",
    "biases = pdict({\n",
    "    'b1': tf.get_variable(\n",
    "        name=\"b_1\", \n",
    "        shape=[N_HIDDEN_1], \n",
    "        initializer=tf.zeros_initializer(),\n",
    "        dtype=tf.float64),\n",
    "    'out': tf.get_variable(\n",
    "        name=\"b_out\", \n",
    "        shape=[N_OUTPUTS], \n",
    "        initializer=tf.zeros_initializer(),\n",
    "        dtype=tf.float64),\n",
    "})\n",
    "\n",
    "with tf.device(TF_DEVICE):\n",
    "    # Get the relevant dataset nodes\n",
    "    x, y, iterators, handler, init_ops = make_tf_ts_datasets(\n",
    "        (phase_datasets_ts2, ts_datasets_ts2), init_ops)\n",
    "\n",
    "    # Build the model\n",
    "    logits = oreilly_model(x)\n",
    "    # Ensure y is cast to the same type as logits\n",
    "    labels = tf.cast(y, logits.dtype)\n",
    "    \n",
    "    # We will keep this in for now\n",
    "    # Define alpha as placeholder variable\n",
    "    alpha_ph = tf.placeholder(tf.float32, shape=[])\n",
    "\n",
    "    # Define loss and optimizer\n",
    "    loss_op = tf.reduce_mean(tf.losses.softmax_cross_entropy(\n",
    "        labels, logits))\n",
    "\n",
    "    # Define some intermediate nodes\n",
    "    predictions = tf.nn.softmax(logits)\n",
    "    rounded_predictions = tf.round(predictions)\n",
    "    equal_labels_and_preds = tf.equal(rounded_predictions, labels)\n",
    "    \n",
    "    # Accuracy \n",
    "    sample_acc = tf.reduce_all(equal_labels_and_preds, axis=1)\n",
    "    accuracy = tf.reduce_mean(tf.cast(sample_acc, tf.float64))\n",
    " \n",
    "    # Adam\n",
    "    train_op_adam = tf.train.AdamOptimizer(alpha_ph).minimize(loss_op)\n",
    "    # Adadelta \n",
    "    train_op_adadelta = tf.train.AdadeltaOptimizer(alpha_ph).minimize(loss_op)\n",
    "    # RMSProp\n",
    "    train_op_rmsprop = tf.train.RMSPropOptimizer(alpha_ph).minimize(loss_op)\n",
    "    # SGD\n",
    "    train_op_sgd = tf.train.GradientDescentOptimizer(alpha_ph).minimize(loss_op)\n",
    "    \n",
    "# And now add these to a dictionary\n",
    "optimizer_dict = pdict({\n",
    "    'Adam' : train_op_adam,\n",
    "    'Adadelta' : train_op_adadelta,\n",
    "    'RMSProp' : train_op_rmsprop,\n",
    "    'sgd' : train_op_sgd,\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%time\n",
    "N_MODELS = 100\n",
    "sess = new_session()\n",
    "all_ts_phase_metrics_ts2 = [train_exp(\n",
    "    sess, \n",
    "    phases=phase_datasets.keys(),\n",
    "    lr=0.00333, \n",
    "    epochs=25,\n",
    "    train_op=optimizer_dict['Adam'], \n",
    "    init_ops=init_ops,\n",
    "    verbose=False,\n",
    "    n_train=None,\n",
    "    n_val=1,\n",
    ") for _ in range(N_MODELS)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Plots for TS2 for TS Old"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "datasets_to_plot = [['TS 1 Phase A', 'TS 2 Phase A'],\n",
    "                    ['TS 1 Phase B', 'TS 2 Phase B'],\n",
    "                    ['TS Old Phase C', 'TS New Phase C']]\n",
    "titles = ['TS 1 and 2 Phase A Full Training',\n",
    "          'TS 1 and 2 Phase B Full Training',\n",
    "          'TS2 for TS Old and TS New Phase C Full Training']\n",
    "for dataset, title in zip(datasets_to_plot, titles):\n",
    "    plot_multiple_models(all_ts_phase_metrics_ts2, dataset,\n",
    "                         title=title)"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
